import os
import librosa
import math
import json
dataset_path = "/content/drive/My Drive/Data/genres_original"
json_path = "/content/drive/My Drive/data.json"
sample_rate= 22050
duration = 30
num_segments = 10
hop_length = 512
n_fft=2048
n_mfcc=13
samples_per_track = sample_rate * duration
def save_mfcc(dataset_path, json_path, n_mfcc=13, n_fft=2048, hop_length= 512, num_segments=10):
  #Extracts MFCCs from music dataset and saves them into a json file along witgh genre labels.
 
  #dictionary to store data
data= {
        "mapping" : ["classical", "Blues"],
        "mfcc" : [],
         "labels" : []
         }

num_samples_per_segment = int(samples_per_track/ num_segments)
expected_num_mfcc_vectors_per_segment = math.ceil(num_samples_per_segment / hop_length)
  #Loop through all genres
for i, (dirpath, dirnames, filenames) in enumerate(os.walk(dataset_path)):
    
    if dirpath is not dataset_path:

      dirpath_components = dirpath.split("/")
      semantic_label = dirpath_components[-1]
      data["mapping"].append(semantic_label)
      print("\nProcessing {}".format(semantic_label))

      for f in filenames:

        file_path = os.path.join(dirpath, f)
        signal, sr = librosa.load(file_path, sr=sample_rate)

      
        for s in range(num_segments):
          start_sample = num_samples_per_segment * s
          finish_sample = start_sample + num_samples_per_segment

          mfcc = librosa.feature.mfcc(signal[start_sample:finish_sample],
                                      sr=sr,
                                      n_fft= n_fft,
                                      n_mfcc=n_mfcc,
                                      hop_length= hop_length)    
          mfcc = mfcc.T

          #Storing mfcc for segment if it has expected length
          if len(mfcc)== expected_num_mfcc_vectors_per_segment:
            data["mfcc"].append(mfcc.tolist())
            data["labels"].append(i-1)
            print("{}, segment:{}".format(file_path,s+1))

    with open(json_path, "w") as fp:
      json.dump(data, fp, indent=4)

if __name__ == "__main__":
  save_mfcc(dataset_path, json_path, num_segments=10)
